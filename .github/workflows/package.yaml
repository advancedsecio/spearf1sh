name: package
#on: 
#  push:
#    branches:    
#      - 'main'
on: push
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Build image inside Terraform provisioned instance
        run: |
          terraform init
          terraform apply -auto-approve \
                          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
                          -var="aws_secret_key=${{ secrets.AWS_SECRET_KEY }}" \
                          -var="aws_region=${{ secrets.AWS_REGION }}"
        working-directory: .github/workflows/terraform

      - name: Destroy Terraform provisioned instance
        if: always()
        run: |
          terraform init
          terraform destroy -auto-approve \
                            -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
                            -var="aws_secret_key=${{ secrets.AWS_SECRET_KEY }}" \
                            -var="aws_region=${{ secrets.AWS_REGION }}"
        working-directory: .github/workflows/terraform

#  package:
#    runs-on: self-hosted
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#          token: ${{ secrets.GH_TOKEN }}
#
#      - name: Build image
#        run: |
#          docker build -t spearf1sh:latest .
#
#      - name: Get artifact from image
#        run: |
#          docker create --name spearf1sh spearf1sh:latest
#          docker cp spearf1sh:/home/buildroot/work/images/sdcard.img sdcard.img
#          docker rm spearf1sh
#
#      - uses: "marvinpinto/action-automatic-releases@latest"
#        with:
#          repo_token: "${{ secrets.GH_TOKEN }}"
#          automatic_release_tag: "latest"
#          prerelease: false
#          files: |
#            sdcard.img
#
#      - name: Clean-up old image builds & files
#        run: |
#          rm sdcard.img
#          docker image prune -f
